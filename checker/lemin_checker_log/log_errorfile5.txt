==33130== Memcheck, a memory error detector
==33130== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==33130== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==33130== Command: ./lem-in
==33130== Parent PID: 31206
==33130== 
==33130== 
==33130== HEAP SUMMARY:
==33130==     in use at exit: 18,151 bytes in 162 blocks
==33130==   total heap usage: 234 allocs, 72 frees, 25,932 bytes allocated
==33130== 
==33130== 72 bytes in 3 blocks are possibly lost in loss record 26 of 42
==33130==    at 0x1000A8C82: calloc (in /Users/jergauth/.brew/Cellar/valgrind/3.14.0/lib/valgrind/vgpreload_memcheck-amd64-darwin.so)
==33130==    by 0x1005C2832: map_images_nolock (in /usr/lib/libobjc.A.dylib)
==33130==    by 0x1005D5D6A: map_images (in /usr/lib/libobjc.A.dylib)
==33130==    by 0x10001703B: dyld::notifyBatchPartial(dyld_image_states, bool, char const* (*)(dyld_image_states, unsigned int, dyld_image_info const*), bool, bool) (in /usr/lib/dyld)
==33130==    by 0x100017255: dyld::registerObjCNotifiers(void (*)(unsigned int, char const* const*, mach_header const* const*), void (*)(char const*, mach_header const*), void (*)(char const*, mach_header const*)) (in /usr/lib/dyld)
==33130==    by 0x10021000A: _dyld_objc_notify_register (in /usr/lib/system/libdyld.dylib)
==33130==    by 0x1005C2072: _objc_init (in /usr/lib/libobjc.A.dylib)
==33130==    by 0x1001A368D: _os_object_init (in /usr/lib/system/libdispatch.dylib)
==33130==    by 0x1001A363A: libdispatch_init (in /usr/lib/system/libdispatch.dylib)
==33130==    by 0x1000B79D5: libSystem_initializer (in /usr/lib/libSystem.B.dylib)
==33130==    by 0x100027A1A: ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==33130==    by 0x100027C1D: ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) (in /usr/lib/dyld)
==33130== 
==33130== LEAK SUMMARY:
==33130==    definitely lost: 0 bytes in 0 blocks
==33130==    indirectly lost: 0 bytes in 0 blocks
==33130==      possibly lost: 72 bytes in 3 blocks
==33130==    still reachable: 200 bytes in 6 blocks
==33130==         suppressed: 17,879 bytes in 153 blocks
==33130== Reachable blocks (those to which a pointer was found) are not shown.
==33130== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==33130== 
==33130== For counts of detected and suppressed errors, rerun with: -v
==33130== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 12 from 12)
